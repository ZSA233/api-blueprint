// Code generated by api-gen-golang; DO NOT EDIT.

package demo

import (
	protos "demo/views/api/protos"
	provider "demo/views/provider"
)

type REQ_Abc_QUERY struct {
	Arg1 bool    `json:"arg1" xml:"arg1" form:"arg1"`
	Arg2 float64 `json:"arg2" xml:"arg2" form:"arg2"`
}

type REQ_Abc = provider.REQ[
	REQ_Abc_QUERY,
	any,
	any,
]

type RSP_Abc_JSON = protos.ApiDemoA

type RSP_Abc = RSP_Abc_JSON

type CTX_Abc = provider.Context[
	REQ_Abc_QUERY,
	any,
	any,
	RSP_Abc_JSON,
]

type REQ_TestPost_JSON struct {
	Req1 string `json:"req1" xml:"req1" form:"req1" binding:"required"`
	Req2 int    `json:"req2" xml:"req2" form:"req2"`
}

type REQ_TestPost = provider.REQ[
	any,
	any,
	REQ_TestPost_JSON,
]

type RSP_TestPost_JSON struct {
	List []string `json:"list" xml:"list" form:"list" binding:"required"`
}

type RSP_TestPost = RSP_TestPost_JSON

type CTX_TestPost = provider.Context[
	any,
	any,
	REQ_TestPost_JSON,
	RSP_TestPost_JSON,
]

type REQ_F1put_QUERY struct {
	Arg1 string  `json:"arg1" xml:"arg1" form:"arg1"`
	Arg2 float64 `json:"arg2" xml:"arg2" form:"arg2"`
}

type REQ_F1put_JSON struct {
	Req1 string `json:"req1" xml:"req1" form:"req1" binding:"required"`
	Req2 int    `json:"req2" xml:"req2" form:"req2"`
}

type REQ_F1put = provider.REQ[
	REQ_F1put_QUERY,
	any,
	REQ_F1put_JSON,
]

type RSP_F1put_JSON struct {
	List []string `json:"list" xml:"list" form:"list" binding:"required"`
}

type RSP_F1put = RSP_F1put_JSON

type CTX_F1put = provider.Context[
	REQ_F1put_QUERY,
	any,
	REQ_F1put_JSON,
	RSP_F1put_JSON,
]

type REQ_Delete_QUERY struct {
	Arg1 string  `json:"arg1" xml:"arg1" form:"arg1"`
	Arg2 float64 `json:"arg2" xml:"arg2" form:"arg2"`
}

type REQ_Delete = provider.REQ[
	REQ_Delete_QUERY,
	any,
	any,
]

type RSP_Delete_JSON struct {
	List []string `json:"list" xml:"list" form:"list" binding:"required"`
}

type RSP_Delete = RSP_Delete_JSON

type CTX_Delete = provider.Context[
	REQ_Delete_QUERY,
	any,
	any,
	RSP_Delete_JSON,
]

type REQ_Ws_QUERY = protos.ApiDemoSubA

type REQ_Ws = provider.REQ[
	REQ_Ws_QUERY,
	any,
	any,
]

type RSP_Ws = any

type CTX_Ws = provider.Context[
	REQ_Ws_QUERY,
	any,
	any,
	any,
]

type REQ_PostDeprecated_JSON struct {
	Req1 string `json:"req1" xml:"req1" form:"req1" binding:"required"`
	Req2 int    `json:"req2" xml:"req2" form:"req2"`
}

type REQ_PostDeprecated = provider.REQ[
	any,
	any,
	REQ_PostDeprecated_JSON,
]

type RSP_PostDeprecated_JSON struct {
	List []string `json:"list" xml:"list" form:"list" binding:"required"`
}

type RSP_PostDeprecated = RSP_PostDeprecated_JSON

type CTX_PostDeprecated = provider.Context[
	any,
	any,
	REQ_PostDeprecated_JSON,
	RSP_PostDeprecated_JSON,
]
