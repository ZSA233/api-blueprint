// Code generated by api-gen-golang; DO NOT EDIT.

package demo

import (
	views "demo/views"
	"github.com/gin-gonic/gin"
)

type RouterInterface interface {
	Abc(ctx *CTX_Abc, req *REQ_Abc) (rsp *RSP_Abc, err error)
	TestPost(ctx *CTX_TestPost, req *REQ_TestPost) (rsp *RSP_TestPost, err error)
	F1put(ctx *CTX_F1put, req *REQ_F1put) (rsp *RSP_F1put, err error)
	Delete(ctx *CTX_Delete, req *REQ_Delete) (rsp *RSP_Delete, err error)
	Ws(ctx *CTX_Ws, req *REQ_Ws) (rsp *RSP_Ws, err error)
	PostDeprecated(ctx *CTX_PostDeprecated, req *REQ_PostDeprecated) (rsp *RSP_PostDeprecated, err error)
}

func NewImpl(eng *gin.Engine) *Router {
	impl := NewRouter()

	views.GET("/api/demo/abc", impl.Abc, eng, "req=Q|auth|handle|rsp=json@GeneralWrapper")
	views.POST("/api/demo/test_post", impl.TestPost, eng, "req=J|auth|handle|rsp=json@GeneralWrapper")
	views.PUT("/api/demo/1put", impl.F1put, eng, "req=QJ|auth|handle|rsp=json@GeneralWrapper")
	views.DELETE("/api/demo/delete$", impl.Delete, eng, "req=Q|auth|handle|rsp=xml@GeneralWrapper")
	views.WS("/api/demo/ws", impl.Ws, eng, "req=Q|auth|handle|rsp=json@GeneralWrapper")
	views.POST("/api/demo/post_deprecated", impl.PostDeprecated, eng, "req=J|auth|handle|rsp=json@GeneralWrapper")

	return impl
}
