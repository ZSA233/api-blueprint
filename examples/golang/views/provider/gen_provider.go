// Code generated by api-gen-golang; DO NOT EDIT.

package provider

var PROVIDERS = map[string]Provider{}

type Provider interface {
	GetName() string
	Handle(anyCtx ContextInterface)
}

func RegisterProvider(name string, handler Provider) {
	PROVIDERS[name] = handler
}

func GetProvider(name string) Provider {
	return PROVIDERS[name]
}

func SelectInternal[Q, F, J, P any](
	key string, value string,
	handler func(c *Context[Q, F, J, P], req *REQ[Q, F, J]) (rsp *P, err error),
) Provider {
	var prov Provider = nil
	switch key {
	case PROV_REQ:
		prov = NewReqProvider(value, handler)
	case PROV_RSP:
		prov = NewRspProvider(value, handler)
	case PROV_AUTH:
		prov = NewAuthProvider(value, handler)
	case PROV_HANDLE:
		prov = NewHandleProvider(value, handler)
	case PROV_WS_HANDLE:
		prov = NewWsHandleProvider(value, handler)
	}
	return prov
}
